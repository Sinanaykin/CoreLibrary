{
  //"IpRateLimitPolicies": { // ip bazlý kurallarý tanýmlamak içþin bu kullanýlýr
  //  "IpRules": [
  //    {
  //      "Ip": "::1", //ip versiyon 6 kullanýldýðý için windows 10 da  ::1 yazmak yeterli 4 . versiyonu kullansaydýk 127.0.0.1 yazýcaktýk
  //      "Rules": [
  //        {
  //          "Endpoint": "*",
  //          "Period": "40s",
  //          "Limit": 30
  //        }
  //      ]
  //    }
  //  ]


  //},

  //yýkarýdaki policy ler aþaðýdaki genel kurallarý ezer.Ancak iki yerdede ayný kural varsa kapsamý daha küçük  olan süre olarak çalýþýr.Ama süreler ayný ise istek sayýsý fazla olan çalýsýr

  //"IpRateLimiting": {
  //  "QuotaExceededResponse": { //Ýstek sayýsi aþýlýnca geri dönecek mesaj þeklini belkiritiriz.
  //    "Content": "{{\"mesaj\":\"istek limiti asildi.\",\"Detay\":\"izin verilen istek sayisi {1} ' de {0} istektir.{2} saniye sonra istek atabilirsiniz.\" }}", //Ýçeriði belirttik Buradaki 1,0 ve 2 =period,limit ve tekrar istek atýlcaðý süre(Header daki retry-afterdan alýyor bunu)
  //    "ContentType": "application/json" //Burda mesajýn tipini belirttik
  //  }, //çift týrnak içerisin çift týrnak kullanmak için \ kullandýk kaçýþ karakteri

  //  "EnableEndpointRateLimiting": true, //endpoint özelinde bir sayý vermek için bunu açmak lazým
  //  //"ReadlIpHeader": "x-ip",//Eðer loadbalancer var ise;burdaki key karþýlýk gelen deðeri okuyarak gelen isteiðin ip adresini öðrenip ona göre bir yönlendirme yapar
  //  "StackBlockedRequests": false, //bir endpointe dk da 60 request saatte toplam 1000 request yapýlabilir.eðer burda dk da 60 deðilde 100 istek olursa  o 40 ý sayýlacak mý sayýlmayacak mý bunu belirtiyoruz.burda sayýlmasýn dedik.
  //  "HttpStatusCode": 429, //default olarak bu verilir çok fazla request yaparsak bu döner
  //  // "IpWhitelist": [ "127.0.0.1", "::1/10", "192.168.0.0/24" ]//sýnýrsýz istek atabilecek ip ler.Ýlki local ip 4 . versiyon ,ikincisi versiyon ip 6 . version.üçüncüsü ise 0/24 aralýðýndaki ip ler demek çoklu
  //  //"IpWhitelist": [ "127.0.0.1", "::1" ],//local ip izin için bunu aç.Eðer bu olursa sýnýrsýz istek atabilirsin çünkü window 10 versiyon 6 ya bakýyor 
  //  "IpWhitelist": [ "127.0.0.1" ], //local ip versiyon 4 var ama versiyon 6 olmadýgý için GeneralRules a bakýcak çünkü windows 10 versiyon 6 ya bakýyor
  //  "EndPointWhiteList": [ "put:/api/product" ], //Metodu HttpPut olan product içindeki metoda bu kurallar uygulanmaz.End ponitleri muaf tutmak için yapýlýr yani

  //  "GeneralRules": [
  //    {
  //      // "Endpoint": "*", //tüm endpoinler için * kullanmýþýz
  //      "Endpoint": "*:/api/product", //product daki get,post,put demek * .20 sn 3 kere istek gelebilir product için .
  //      //Not get için ayrý 3 sayar post için ayrý 3 sayar
  //      "Period": "20s", //s=saniye,m=dakika,d=gün
  //      "Limit": 3 //kaç istek atýlabilir
  //    },
  //    {
  //      // "Endpoint": "*", //tüm endpoinler için * kullanmýþýz
  //      "Endpoint": "*:/api/product", //1 saatte 100 istek gelebilir product için
  //      "Period": "1h", //s=saniye,m=dakika,d=gün
  //      "Limit": 100 //kaç istek atýlabilir
  //    },

  //    {

  //      "Endpoint": "*:/api/product/*", //Sona yýldýz dersek parametre alanlar anlamýna gelir.O endpointler için kurallarý çalýþtýrýr.
  //      "Period": "30",
  //      "Limit": 5
  //    },

  //    {
  //      // "Endpoint": "*", //tüm endpoinler için * kullanmýþýz
  //      "Endpoint": "*:/api/categories", //30 saniye  5 istek gelebilir categori için
  //      "Period": "30s", //s=saniye,m=dakika,d=gün
  //      "Limit": 5 //kaç istek atýlabilir
  //    },
  //    {
  //      // "Endpoint": "*", //tüm endpoinler için * kullanmýþýz
  //      "Endpoint": "*:/api/categories", //1 günde 500 istek gelebilir product için
  //      "Period": "1d", //s=saniye,m=dakika,d=gün
  //      "Limit": 500 //kaç istek atýlabilir
  //    }
  //  ]
  //},

  //Clien Id rate limit için aþaðý kurallarý yaptýk
  "ClientRateLimiting": {
    "QuotaExceededResponse": { //Ýstek sayýsi aþýlýnca geri dönecek mesaj þeklini belkiritiriz.
      "Content": "{{\"mesaj\":\"istek limiti asildi.\",\"Detay\":\"izin verilen istek sayisi {1} ' de {0} istektir.{2} saniye sonra istek atabilirsiniz.\" }}", //Ýçeriði belirttik Buradaki 1,0 ve 2 =period,limit ve tekrar istek atýlcaðý süre(Header daki retry-afterdan alýyor bunu)
      "ContentType": "application/json" //Burda mesajýn tipini belirttik
    }, //çift týrnak içerisin çift týrnak kullanmak için \ kullandýk kaçýþ karakteri
    "EnableEndpointRateLimiting": true, //endpoint özelinde bir sayý vermek için bunu açmak lazým
    //"ReadlIpHeader": "x-ip",//Eðer loadbalancer var ise;burdaki key karþýlýk gelen deðeri okuyarak gelen isteiðin ip adresini öðrenip ona göre bir yönlendirme yapar
    "StackBlockedRequests": false, //bir endpointe dk da 60 request saatte toplam 1000 request yapýlabilir.eðer burda dk da 60 deðilde 100 istek olursa  o 40 ý sayýlacak mý sayýlmayacak mý bunu belirtiyoruz.burda sayýlmasýn dedik.
    "HttpStatusCode": 429, //default olarak bu verilir çok fazla request yaparsak bu döner
    // "IpWhitelist": [ "127.0.0.1", "::1/10", "192.168.0.0/24" ]//sýnýrsýz istek atabilecek ip ler.Ýlki local ip 4 . versiyon ,ikincisi versiyon ip 6 . version.üçüncüsü ise 0/24 aralýðýndaki ip ler demek çoklu
    //"IpWhitelist": [ "127.0.0.1", "::1" ],//local ip izin için bunu aç
    "ClientIdHeader": "x-ClientId", //Böyle bir key alýyorum postmande  header dan bunu deðeri aþaðýdaki client-1 ise kurallardan muaf olucak yoksa kurallara tabi olacak
    "ClientWhitelist": [ "client-1" ],
    "EndPointWhiteList": [ "put:/api/product" ], //Metodu HttpPut olan product içindeki metoda bu kurallar uygulanmaz.End ponitleri muaf tutmak için yapýlýr yani
    "GeneralRules": [
      {
        // "Endpoint": "*", //tüm endpoinler için * kullanmýþýz
        "Endpoint": "*:/api/product", //product daki get,post,put demek * .20 sn 3 kere istek gelebilir product için .
        //Not get için ayrý 3 sayar post için ayrý 3 sayar
        "Period": "20s", //s=saniye,m=dakika,d=gün
        "Limit": 3 //kaç istek atýlabilir
      },
      {
        // "Endpoint": "*", //tüm endpoinler için * kullanmýþýz
        "Endpoint": "*:/api/product", //1 saatte 100 istek gelebilir product için
        "Period": "1h", //s=saniye,m=dakika,d=gün
        "Limit": 100 //kaç istek atýlabilir
      },

      {

        "Endpoint": "*:/api/product/*", //Sona yýldýz dersek parametre alanlar anlamýna gelir.O endpointler için kurallarý çalýþtýrýr.
        "Period": "30",
        "Limit": 5
      },

      {
        // "Endpoint": "*", //tüm endpoinler için * kullanmýþýz
        "Endpoint": "*:/api/categories", //30 saniye  5 istek gelebilir categori için
        "Period": "30s", //s=saniye,m=dakika,d=gün
        "Limit": 5 //kaç istek atýlabilir
      },
      {
        // "Endpoint": "*", //tüm endpoinler için * kullanmýþýz
        "Endpoint": "*:/api/categories", //1 günde 500 istek gelebilir product için
        "Period": "1d", //s=saniye,m=dakika,d=gün
        "Limit": 500 //kaç istek atýlabilir
      }
    ]
  },

  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*"
}
